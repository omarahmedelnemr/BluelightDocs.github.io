[
    {
        "endpoint":"/",
        "method":"GET",
        "description":"display a simple HTML page says Welcome, i could be used to Check the Server is Running",

        "responseDescription":"Simple HTML Page Says Hello"
    },
    {
        "endpoint":"/login",
        "method":"POST",
        "description":"Login To The System, using your username and password, and Then The Server Will Route You to You Side weather you are a Student, Admin, Teacher, Parents.<br/>Every user is Given a Defualt username using his name, the user can change it later",
        "parameters":[
            {
                "paramName":"username",
                "paramType":"String",
                "paramDescription":"The Username you use as Your Identifier"
            },
            {
                "paramName":"password",
                "paramType":"String",
                "paramDescription":"user's Password, user can also change it later"
            }
            
        ],
        "requestExample":{
            "username":"kariem_elsayd",
            "password":"myschool"
        },
        "responseExample":{
            "id": 8,
            "name": "Omar",
            "img_dir": "http",
            "age": 14,
            "classroom": "E3/1",
            "role": "student",
            "arName":"عمر",
            "gender":"male"
        },
        "responseDescription":"Receives user Info to be saved in Local Storage and a jwt is sent as a cookie with the users Data OtherWise, Reacives user not Found or wrong password if the password is wrong"
    },
    {
        "endpoint":"/forgetPassword",
        "method":"POST",
        "description":"used in Resting Password Procces to Confirm the National ID",
        "parameters":[
            {
                "paramName":"username",
                "paramType":"String",
                "paramDescription":"The Username you use as Your Identifier"
            },
            {
                "paramName":"nationalID",
                "paramType":"String",
                "paramDescription":"user's national ID, must be 14 Digit"
            }
            
        ],
        "requestExample":{
            "username":"omar_ahmed",
            "nationalID":"12345678901234"
        },


        "responseDescription":"Receives Authenticated if The Data is Correct, Otherwise Reacives user not Found or Wrong National ID if the National ID is wrong or one of the Common Errors"
    },
    {
        "endpoint":"/resetPassword",
        "method":"POST",
        "description":"used in Resting Password Procces to Confirm the National ID",
        "parameters":[
            {
                "paramName":"username",
                "paramType":"String",
                "paramDescription":"The Username you use as Your Identifier"
            },
            {
                "paramName":"nationalID",
                "paramType":"String",
                "paramDescription":"user's national ID, must be 14 Digit"
            },
            {
                "paramName":"newPassword",
                "paramType":"String",
                "paramDescription":"user's New Password"
            }
            
        ],
        "requestExample":{
            "username":"omar_ahmed",
            "nationalID":"12345678901234",
            "newPassword":"myPassword"
        },


        "responseDescription":"Receives Done if The Data is Correct, Otherwise Reacives one of the Common Errors"
    },
    {
        "endpoint":"/editUsername",
        "method":"POST",
        "description":"used To Edit user's Username which is user to login",
        "parameters":[
            {
                "paramName":"username",
                "paramType":"String",
                "paramDescription":"The Username you use as Your Identifier"
            },
            {
                "paramName":"password",
                "paramType":"String",
                "paramDescription":"user's Password, user can also change it later"
            },
            {
                "paramName":"newUsername",
                "paramType":"String",
                "paramDescription":"user's new Username the he Choosed"
            }
            
        ],
        "requestExample":{
            "username":"omar_ahmed",
            "password":"testPassword",
            "newUsername":" erin_yeagar"
        },


        "responseDescription":"Receives Done if The Data is Correct, Otherwise Reacives user not Found or wrong password if the password is wrong or one of the Common Errors"
    },
    {
        "endpoint":"/editPassword",
        "method":"POST",
        "description":"used To Edit user's Password which is user to login",
        "parameters":[
            {
                "paramName":"username",
                "paramType":"String",
                "paramDescription":"The Username you use as Your Identifier"
            },
            {
                "paramName":"password",
                "paramType":"String",
                "paramDescription":"user's Password, user can also change it later"
            },
            {
                "paramName":"newPassword",
                "paramType":"String",
                "paramDescription":"user's new Password the he Choosed"
            }
            
        ],
        "requestExample":{
            "username":"omar_ahmed",
            "password":"testPassword",
            "newPassword":"my password"
        },


        "responseDescription":"Receives Done if The Data is Correct, Otherwise Reacives user not Found or wrong password if the password is wrong or one of the Common Errors"
    },
    {
        "endpoint":"/IssuReport",
        "method":"POST",
        "description":"used To report an Issu or submit a Suggestion",
        "parameters":[
            {
                "paramName":"userID",
                "paramType":"Number",
                "paramDescription":"THe user ID"
            },
            {
                "paramName":"role",
                "paramType":"String",
                "paramDescription":"weather the User is student, teacher, or parent"
            },
            {
                "paramName":"publish_date",
                "paramType":"Date",
                "paramDescription":"The Date that the issu was sent in"
            },
            {
                "paramName":"title",
                "paramType":"String",
                "paramDescription":"The title of the Issu"
            },
            {
                "paramName":"bodyText",
                "paramType":"String",
                "paramDescription":"The main Text of the issu"
            }
            
        ],
        "requestExample":{
            "userID":1,
            "role":"student",
            "publish_date":"2023-5-23 12:43",
            "title":"Error while login",
            "bodyText":"i was try to Login multiple Times but cant event i am sure about the Entered Password and username"
        },


        "responseDescription":"Receives Done if The Data is Correct, Otherwise Reacives user not Found or wrong password if the password is wrong or one of the Common Errors"
    },
    {
        "endpoint":"/upload",
        "method":"POST",
        "description":"used To upload a File to The Files Server (Somthing like Database) the Supported File Types are [png,jpg,jpeg] for images, 'pdf' for files",
        "parameters":[
            {
                "paramName":"file",
                "paramType":"file",
                "paramDescription":"The File to be Uploaded, (the Name of the Field is File no matter what the File name is, the Server will Generate a New One)"
            }
            
        ],
        "responseExample":"214124223.png",


        "responseDescription":"Receives The name of the Uploaded File on the Server to Be Stored as String in Database , Otherwise Reacives 'No files were uploaded' if the field File is empty or 'File Type is Not Supported' is the uploaded File Type is Not Supported,  or one of the Common Errors"
    },
    {
        "endpoint":"/uploadProfilePic",
        "method":"POST",
        "description":"used To upload a Profile Picture to The Files Server (Somthing like Database) the Supported File Types are [png,jpg,jpeg]",
        "parameters":[
            {
                "paramName":"file",
                "paramType":"file",
                "paramDescription":"The Image to be Uploaded, (the Name of the Field is File no matter what the File name is, the Server will Generate a New One)"
            },
            {
                "paramName":"type",
                "paramType":"String",
                "paramDescription":"(optional) the type of user you want to change his profile, (student, teacher, parent) if you provide this parameter with the next Parameter 'id', it means upload the picture and change user's picture entry in Database, if you didn't provide them, it means Just upload the image and give me it name in the Database "
            },
            {
                "paramName":"id",
                "paramType":"number",
                "paramDescription":"(optional) the id of ther User you want to change his Profile Picture"
            }
            
        ],
        "responseExample":{
            "message":"uploaded",
            "fileName":"214124223.png"
        },


        "responseDescription":"Receives dictionary with two value,'message' which will be wheather error happend, or just uploaded if you didn't provide type and id, or uploaded and user updated if you provide user and id,the second value 'fileName',which is The name of the Uploaded Picture on the Server to Be Stored as String in Database , Otherwise Reacives 'No files were uploaded' if the field File is empty or 'File Type is Not Supported' is the uploaded File Type is Not Supported,  or one of the Common Errors"
    },
    {
        "endpoint":"/file/(filename)",
        "method":"get",
        "description":"used To Get a File from the Server, (filename) should be replaced with The Actual File Name Which is returned in upload Endpoint, somthing like 123456.png",
        
        "responseDescription":"Receives The image or a file that matchs the name provided"
    },
    {
        "endpoint":"/download/(filename)",
        "method":"get",
        "description":"used To Download a File from the Server, (filename) should be replaced with The Actual File Name Which is returned in upload Endpoint, somthing like 123456.pdf",
        "responseDescription":"Receives The image or a file that matchs the name provided"
    },
    {
        "endpoint":"/profilePic/(filename)",
        "method":"get",
        "description":"used To Get or Download a Profile Picture from the Server, (filename) should be replaced with The Actual picture Name Which is returned in uploadProfilePic Endpoint, somthing like 123456.png",
        
        "responseDescription":"Receives The image that matchs the name provided"
    },
    {
        "endpoint":"/allAvatars",
        "method":"get",
        "description":"used To Get all the  Avatars Stored in the Server",
        "responseExample":[
            {
                "id":1,
                "avatar":"123.png"
            },
            {
                "id":2,
                "avatar":"234.png"
            }
        ],
        "responseDescription":"Receives All The Avatars List"
    },
    {
        "endpoint":"/changeAvatar",
        "method":"post",
        "description":"used To Change User's Personal Avatar ( Profile Picture )",
        "parameters":[
            {
                "paramName":"userID",
                "paramType":"number",
                "paramDescription":"Users ID"
            },
            {
                "paramName":"role",
                "paramType":"string",
                "paramDescription":"Weather the user is student, teacher, or parent"
            },
            {
                "paramName":"avatar",
                "paramType":"string",
                "paramDescription":"Avatar Name in the Server, which can Be Taken From AllAvatars Endpoint"
            }
        ],

        "responseDescription":"Receives 'Done' if Every Thing Went Well,'Incorrect Role' if the role was wrong or one of The Common Errors"
    },
    {
        "endpoint":"/avatar/(avatarName)",
        "method":"get",
        "description":"used To Get an Avatar from the Server, (avatarName) should be replaced with The Actual avatar Name Which is returned in avatar uploading",
        
        "responseDescription":"Receives The image or a file that matchs the name provided"
    },
    {
        "endpoint":"/newavatar",
        "method":"POST",
        "parameters":[
            {
                "paramName":"file",
                "paramType":"file",
                "paramDescription":"The Image to be Uploaded, (the Name of the Field is File no matter what the File name is, the Server will Generate a New One)"
            }
        ],
        "description":"used To Get upload new Avatar (not a user Endpoint Just for System Admins)",
        "responseExample":"214124223.png",
        "responseDescription":"Receives The Uploaded Avatar Nmae"
    },
    {
        "endpoint":"/Admin/school",
        "method":"POST",
        "description":"Create New School",
        "parameters":[
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"the Name of the School"
            },
            {
                "paramName":"logo",
                "paramType":"String",
                "paramDescription":"the Image Directory or Link in the Server"
            },
            {
                "paramName":"studentsNum",
                "paramType":"Number",
                "paramDescription":"The Number of the Students will Be in the School"
            }
            
        ],
        "requestExample":{
            "name":"private School",
            "logo":"http://newImage",
            "studentsNum":130
        },
        "responseExample":{
            "name": "private School",
            "logo": "http://newImage",
            "number_of_students": 130,
            "id": 3
        },
        "responseDescription":"Receives School Data, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/classroom",
        "method":"POST",
        "description":"Create New Classroom",
        "parameters":[
            {
                "paramName":"schoolID",
                "paramType":"Number",
                "paramDescription":"The ID of The School"
            },
            {
                "paramName":"classroomID",
                "paramType":"String",
                "paramDescription":"Desired id For Classroom, Usally the First letter of The Grade and Classroom Name like 'E3/2'"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For Classroom, Which Will Be Displayed in Student's Pages"
            }
            
        ],
        "requestExample":{
            "schoolID":1,
            "classroomID":"E3/2",
            "name":"3/2"
        },
        "responseDescription":"Receives Classroom Data, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/classroom",
        "method":"DELETE",
        "description":"Delete Classroom Entity",
        "parameters":[
            {
                "paramName":"classroomID",
                "paramType":"String",
                "paramDescription":"Desired id For Classroom, Usally the First letter of The Grade and Classroom Name like 'E3/2'"
            } 
        ],
        "requestExample":{
            "classroomID":"E3/2"
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/course",
        "method":"POST",
        "description":"Create New Course",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"The ID of The Teacher"
            },
            {
                "paramName":"classes",
                "paramType":"Array",
                "paramDescription":"The Array of Which Classrooms Will Be Registered in That Course"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For Course, Which Will Be Displayed in Course's Pages"
            },
            {
                "paramName":"score",
                "paramType":"Number",
                "paramDescription":"Desired Score (Marks) For This Course, like Math is 100 Marks"
            }  
        ],
        "requestExample":{
            "teacherID":1,
            "classes":["E3/1","E3/2","e3/3"],
            "name":"Math",
            "score":100
        },
        "responseDescription":"Receives Course Data, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/course",
        "method":"delete",
        "description":"Delete an Existing Course",
        "parameters":[
            {
                "paramName":"courseID",
                "paramType":"String",
                "paramDescription":"The ID of The Desired Course"
            }
        ],
        "requestExample":{
            "courseID":"Math1"
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/student",
        "method":"POST",
        "description":"Add New Student",
        "parameters":[
            {
                "paramName":"schoolID",
                "paramType":"Number",
                "paramDescription":"The ID of The School"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For Student, Which Will Be Displayed in Student's Pages"
            },
            {
                "paramName":"img_dir",
                "paramType":"String",
                "paramDescription":"the Link of Student's Profile Picture (Could Be Null)"
            },
            {
                "paramName":"age",
                "paramType":"Number",
                "paramDescription":"The Age of the Student"
            },
            {
                "paramName":"gender",
                "paramType":"String",
                "paramDescription":"The Gender of the Student weather 'male' or 'female'"
            },
            {
                "paramName":"classroom",
                "paramType":"String",
                "paramDescription":"THe ID of the Classrom Which Student Will Be Registered in"
            }
        ],
        "requestExample":{
            "schoolID":1,
            "name":"Omar Mohamed Ahmed Abd-ElSamee",
            "img_dir":"",
            "age":15,
            "gender":"male",
            "classroom":"E3/2"
        },
        "responseDescription":"Receives Student Data, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/student",
        "method":"delete",
        "description":"Remove a Student",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"The ID of The Student"
            }  
        ],
        "requestExample":{
            "studentID":1
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/studentClassroomEdit",
        "method":"POST",
        "description":"change the Classroom of the Student",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"The ID of The Teacher"
            },
            {
                "paramName":"classroom",
                "paramType":"String",
                "paramDescription":"The new Classroom For The Student"
            }
        ],
        "requestExample":{
            "studentID":1,
            "classroom":"E3/1"
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/studentInfoEdit",
        "method":"POST",
        "description":"change some Info about a student",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"The ID of The student"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For The student, Which Will Be Displayed in student's Pages"
            },
            {
                "paramName":"img_dir",
                "paramType":"String",
                "paramDescription":"the Link of student's Profile Picture (Could Be Null)"
            },
            {
                "paramName":"age",
                "paramType":"Number",
                "paramDescription":"The Age of the Stduent"
            },
            {
                "paramName":"gender",
                "paramType":"String",
                "paramDescription":"The Gender of the Student weather 'male' or 'female'"
            }
        ],
        "requestExample":{
            "studentID":1,
            "name":"Mohamed Elsaid Slama",
            "img_dir":"http://api.bluelightlms.com/file/2131xaas675546578.png",
            "age":13,
            "gender":"male"
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/allStudents",
        "method":"Get",
        "description":"Return all Students In The School",
        "responseExample":[
            {
                "id": 8,
                "name": "Omar Mohamed Ahmed Abd-ElSamee",
                "img_dir": "",
                "age": 14,
                "gender":"male"
            },
            {
                "id": 9,
                "name": "Mohamed Omar Ahmed Abd-ElSamee",
                "img_dir": "",
                "age": 15,
                "gender":"male"

            },
            {
                "id": 10,
                "name": "Ahmed Mohamed Omar Abd-ElSamee",
                "img_dir": "",
                "age": 14,
                "gender":"male"

            }
        ],
        "responseDescription":"Receives a List of All Students in The School if Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/teacher",
        "method":"POST",
        "description":"Add New Teacher",
        "parameters":[
            {
                "paramName":"schoolID",
                "paramType":"Number",
                "paramDescription":"The ID of The School"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For The Teacher, Which Will Be Displayed in Teacher's Pages"
            },
            {
                "paramName":"img_dir",
                "paramType":"String",
                "paramDescription":"the Link of Teacher's Profile Picture (Could Be Null)"
            },
            {
                "paramName":"age",
                "paramType":"Number",
                "paramDescription":"The Age of the Teacher"
            },
            {
                "paramName":"gender",
                "paramType":"String",
                "paramDescription":"The Gender of the Teacher weather 'male' or 'female'"
            },
            {
                "paramName":"subject",
                "paramType":"String",
                "paramDescription":"The Subject that The Teacher Teaching"
            },
            {
                "paramName":"role",
                "paramType":"String",
                "paramDescription":"The Role of the Teacher in School (Responsible For Subject, Normal,other Roles)"
            }
        ],
        "requestExample":{
            "schoolID":1,
            "name":"Mohamed Elsaid Slama",
            "img_dir":"http://api.bluelightlms.com/file/2131xaas675546578.png",
            "age":41,
            "gender":"male",
            "subject":"math",
            "role":"normal"

        },
        "responseDescription":"Receives Teacher Data, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/teacher",
        "method":"delete",
        "description":"Remove a Teacher",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"The ID of The Teacher"
            } 
        ],
        "requestExample":{
            "teacherID":1
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/teacherRoleEdit",
        "method":"POST",
        "description":"change the Role of the Teacher",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"The ID of The Teacher"
            },
            {
                "paramName":"role",
                "paramType":"String",
                "paramDescription":"The new Role of the Teacher in School (Responsible For Subject, Normal,other Roles)"
            }
        ],
        "requestExample":{
            "teacherID":1,
            "role":"consultant"
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/teacherInfoEdit",
        "method":"POST",
        "description":"change some Info about a Teacher",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"The ID of The Teacher"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For The Teacher, Which Will Be Displayed in Teacher's Pages"
            },
            {
                "paramName":"img_dir",
                "paramType":"String",
                "paramDescription":"the Link of Teacher's Profile Picture (Could Be Null)"
            },
            {
                "paramName":"age",
                "paramType":"Number",
                "paramDescription":"The Age of the Teacher"
            },
            {
                "paramName":"gender",
                "paramType":"String",
                "paramDescription":"The Gender of the Teacher weather 'male' or 'female'"
            }
        ],
        "requestExample":{
            "teacherID":1,
            "name":"Mohamed Elsaid Slama",
            "img_dir":"http://api.bluelightlms.com/file/2131xaas675546578.png",
            "age":41,
            "gender":"male"
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/allTeachers",
        "method":"Get",
        "description":"Return all Teachers In The School",
        "responseExample":[
            {
                "id": 8,
                "name": "Omar Mohamed Ahmed Abd-ElSamee",
                "img_dir": "",
                "age": 41,
                "gender":"male"
            },
            {
                "id": 9,
                "name": "Mohamed Omar Ahmed Abd-ElSamee",
                "img_dir": "",
                "age": 43,
                "gender":"male"
            },
            {
                "id": 10,
                "name": "Ahmed Mohamed Omar Abd-ElSamee",
                "img_dir": "",
                "age": 35,
                "gender":"male"
            }
        ],
        "responseDescription":"Receives a List of All Teachers in The School if Went Well, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/admin/parent",
        "method":"POST",
        "description":"Add New Parent",
        "parameters":[
            {
                "paramName":"schoolID",
                "paramType":"Number",
                "paramDescription":"The ID of The School"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Desired Name For The Parent, Which Will Be Displayed in Parent's Pages"
            },
            {
                "paramName":"img_dir",
                "paramType":"String",
                "paramDescription":"the Link of Teacher's Profile Picture (Could Be Null)"
            },
            {
                "paramName":"age",
                "paramType":"Number",
                "paramDescription":"The Age of the Parent"
            },
            {
                "paramName":"gender",
                "paramType":"String",
                "paramDescription":"The Gender of the Parent weather 'male' or 'female'"
            },
            {
                "paramName":"relation",
                "paramType":"Number",
                "paramDescription":"The Relation Between the parent and the Student weather 'father' or 'mother'"
            },
            {
                "paramName":"students",
                "paramType":"List",
                "paramDescription":"The List Providing The Students ID's That Parent is Responsoble For, might be one Students or two or eny Number"
            }
        ],
        "requestExample":{
            "schoolID":1,
            "name":"Mohamed Elsaid Slama",
            "img_dir":"http://api.bluelightlms.com/file/2131675546578.png",
            "age":41,
            "gender":"male",
            "relation":"father",
            "students":[1,2]

        },
        "responseDescription":"Receives Parent Data, OtherWise, Reacives one of the Common Errors"
    },
    {
        "endpoint":"/Admin/parent",
        "method":"delete",
        "description":"Remove a parent",
        "parameters":[
            {
                "paramName":"parentID",
                "paramType":"Number",
                "paramDescription":"The ID of The parent"
            } 
        ],
        "requestExample":{
            "parentID":1
        },
        "responseDescription":"Receives 'Done' if EveryThing Went Well, OtherWise, Reacives one of the Common Errors"
    },








    {
        "endpoint":"/Parent/location",
        "method":"GET",
        "description":"get the lastest Location of Student and The Last Update Time",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives the Location and The Last Update Time",
        "responseExample":{
            "id": 1,
            "lastLocation": "32.42.12.12",
            "lastUpdate": "2023-04-26T01:53:09.000Z"
        }
    },
    {
        "endpoint":"/Parent/assignedHomeworkList",
        "method":"GET",
        "description":"get a List Of the Homework Assignemt to The Student Weather Submitted or Not",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives a List Of the Homework Assignemt to The Student",
        "responseExample":[
            {
                "id": 23,
                "submitted": false,
                "grade": null,
                "homework": {
                    "id": 19,
                    "name": "sheet1",
                    "description": "solve it The  Following",
                    "grade": 10,
                    "publish_date": "2020-12-12T18:10:10.000Z",
                    "due_date": null
                }
            },
            {
                "id": 24,
                "submitted": true,
                "grade": null,
                "homework": {
                    "id": 21,
                    "name": "sheet2",
                    "description": "solve next Questions",
                    "grade": 10,
                    "publish_date": "2020-12-12T18:10:10.000Z",
                    "due_date": null
                }
            }
        ]
    },
    {
        "endpoint":"/parent/homeworkHeader",
        "method":"GET",
        "description":"The Endpoint Used to Get All Details like Homework Title, grades,   About Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives all the Data Related To That Homework",
        "responseExample":{
            "id": 54,
            "submitted": true,
            "grade": 15,
            "graded": true,
            "homework": {
                "id": 29,
                "name": "sheet1",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null
            }
        }   
        
    },
    {
        "endpoint":"/parent/SubmittedHomeworkQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get only Submitted Questions with it's answers in a Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            }
        ],
        "responseDescription":"Receives a list of all the Submitted Questions in That Homework,With Their answer",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "attachments": null,
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9",
                        "Studentanswer": true
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6",
                        "Studentanswer": false
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1",
                        "Studentanswer": false
                    }
                ]
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "attachments": null,
                "Studentanswer": "it is a layer around the Earth "
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "attachments": null,
                "Studentattachment": ["test.png"]
            }
        ]
        
    },
    {
        "endpoint":"/Parent/assignedExamList",
        "method":"GET",
        "description":"get a List Of the Exams Assignemt to The Student Weather Submitted or Not",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives a List Of the Exams Assignemt to The Student",
        "responseExample":[
            {
                "id": 23,
                "submitted": false,
                "grade": null,
                "exams": {
                    "id": 19,
                    "name": "sheet1",
                    "description": "solve it The  Following",
                    "grade": 10,
                    "publish_date": "2020-12-12T18:10:10.000Z",
                    "due_date": null
                }
            },
            {
                "id": 24,
                "submitted": true,
                "grade": null,
                "homework": {
                    "id": 21,
                    "name": "sheet2",
                    "description": "solve next Questions",
                    "grade": 10,
                    "publish_date": "2020-12-12T18:10:10.000Z",
                    "due_date": null
                }
            }
        ]
    },
    {
        "endpoint":"/parent/examHeader",
        "method":"GET",
        "description":"The Endpoint Used to Get All Details like Exam Title, grades,   About Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives all the Data Related To That Exam",
        "responseExample":{
            "id": 54,
            "submitted": true,
            "grade": 15,
            "graded": true,
            "submissionDate": "2023-08-09T15:30:08.000Z",
            "exam": {
                "id": 29,
                "name": "sheet1",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null
            }
        }   
        
    },
    {
        "endpoint":"/parent/SubmittedExamQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get only Submitted Questions with it's answers in a Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            }
        ],
        "responseDescription":"Receives a list of all the Submitted Questions in That Exam ,With Their answer",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "attachments": null,
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9",
                        "Studentanswer": true
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6",
                        "Studentanswer": false
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1",
                        "Studentanswer": false
                    }
                ]
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "attachments": null,
                "Studentanswer": "it is a layer around the Earth "
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "attachments": null,
                "Studentattachment": ["test.png"]
            }
        ]
    },
    {
        "endpoint":"/parent/messages",
        "method":"Get",
        "description":"The Endpoint Used to get a all messages Sent to the Parent",
        "parameters":[
            {
                "paramName":"parentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Parent"
            },
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
            
            
        ],
        "responseDescription":"Receives All Private Messages",
        "responseExample":[
            {
                "id": 1,
                "title": "Update of Your Progress",
                "bodyText": "Your Have Been Doing Greate the Last Semester, which makes us all happy about what your are doing",
                "sendDate": "2023-08-13T01:52:47.000Z",
                "seen": true,
                "teacher": {
                    "id": 1,
                    "name": "Mostafa mohamed Mostafa",
                    "arName": "",
                    "img_dir": "default.png",
                    "age": 49,
                    "gender": "",
                    "role": "normal"
                },
                "private": true,
                "attachments": [
                    {
                        "attachment": "01023.png"
                    },
                    {
                        "attachment": "5667.png"
                    }
                ]
            },
            {
                "id": 1,
                "title": "testTitle",
                "description": "TestDesc",
                "sendDate": "2020-12-12T06:08:08.000Z",
                "teacher": {
                    "id": 1,
                    "name": "Mostafa mohamed Mostafa",
                    "arName": "",
                    "img_dir": "default.png",
                    "age": 49,
                    "gender": "",
                    "role": "normal"
                },
                "private": false,
                "attachments": []
            }
        ]
    },
    {
        "endpoint":"/parent/messagesCount",
        "method":"GET",
        "description":"The Endpoint Used to Get All The unseen Messages Count",
        "parameters":[
            {
                "paramName":"parentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Parent"
            }
            
        ],
        "responseDescription":"Receives a Number unseen Messages",
        "responseExample":{"count":2}
    },
    {
        "endpoint":"/parent/seeMessage",
        "method":"POST",
        "description":"The Endpoint Used to Mark a Message as Seen",
        "parameters":[
            {
                "paramName":"parentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Parent"
            },
            {
                "paramName":"messageID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Message"
            },
            {
                "paramName":"private",
                "paramType":"boolean",
                "paramDescription":"Take Weather the Message is Private or Public"
            }

            
        ],
        "requestExample":{
            "parentID":1,
            "messageID":1,
            "private":false
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors"
    },










    
    {
        "endpoint":"/student/HomeworkList",
        "method":"GET",
        "description":"The Endpoint Used in get All Homework List Assinged to Student's Class, the Homework Will Not Be In Detail Just the Name,Total Marks,Due Data, and The Name Of the Subject",
        "parameters":[

            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives The List of Homework Assinged To That Class With No Deep Details, Just Homework Name and ID",
        "responseExample":[
            {
                "id": 2,
                "submitted": false,
                "grade": null,
                "homework": {
                    "id": 2,
                    "name": "First Sheet",
                    "description": "Solve From Q1 to Q10:",
                    "grade": 20,
                    "publish_date": "2023-02-19T18:42:49.000Z",
                    "due_date": "2023-02-19T18:42:50.000Z",
                    "subject": {
                        "id": 2,
                        "teacherID": null,
                        "name": "Physics",
                        "score": 200
                    }
                }
            }
        ]
    },
    {
        "endpoint":"/student/SubmittedHomeworkList",
        "method":"GET",
        "description":"The Endpoint Used in get All Homework That Student Already Submit, the Homework Will Not Be In Detail Just the Name,Total Marks,Due Data, and The Name Of the Subject",
        "parameters":[

            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives The List of Submitted Homework  To That Class With No Deep Details, Just Homework Name and ID",
        "responseExample":[
            {
                "id": 2,
                "submitted": false,
                "grade": null,
                "homework": {
                    "id": 2,
                    "name": "First Sheet",
                    "description": "Solve From Q1 to Q10:",
                    "grade": 20,
                    "publish_date": "2023-02-19T18:42:49.000Z",
                    "due_date": "2023-02-19T18:42:50.000Z",
                    "subject": {
                        "id": 2,
                        "teacherID": null,
                        "name": "Physics",
                        "score": 200
                    }
                }
            }
        ]
    },
    {
        "endpoint":"/student/homeworkGrades",
        "method":"GET",
        "description":"The Endpoint Used to get The Student Grades",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives Student's Grade and The Total Grade",
        "responseExample":{
            "grade": 25,
            "totalGrade": 45
        }
        
    },
    {
        "endpoint":"/student/HomeworkCount",
        "method":"GET",
        "description":"The Endpoint Used to get How Meny Homework are Assinged to Student's Class and are Not Submitted yet",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives a Number of Assigned Homework",
        "responseExample":{
            "count":2
        }
        
    },
    {
        "endpoint":"/student/totalHomeworkCount",
        "method":"GET",
        "description":"The Endpoint Used to get How Meny Homework are Assinged to Student's Class wheather Submitted or not",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives a Number of Total Homework",
        "responseExample":{
            "count":2
        }
        
    },
    {
        "endpoint":"/student/homeworkHeader",
        "method":"GET",
        "description":"The Endpoint Used to Get All Details like Homework Title, grades,   About Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            },
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives all the Data Related To That Homework",
        "responseExample":{
            "id": 54,
            "submitted": true,
            "grade": 15,
            "graded": true,
            "homework": {
                "id": 29,
                "name": "sheet1",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null
            }
        }   
        
    },
    {
        "endpoint":"/student/HomeworkQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get All Questions in a Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            }
        ],
        "responseDescription":"Receives a list of all the Questions in That Homework,<br/>the Received Parameter 'Type' Might Have Meny Value as Follows:<br/> <code classname='higlighted'>'smcq'</code> Means Single Choise MCQ Questions,<br/> <code classname='higlighted'>'mmcq'</code> Means Multiple Choise MCQ Question<br/> <code classname='higlighted'>'written'</code> Means Written Question,<br/> <code classname='higlighted'>'attach'</code> Mean Question Need Attachment ",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9"
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6"
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1"
                    }
                ],
                "attachments": []
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "options": [],
                "attachments": []
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "options": [],
                "attachments": [
                    "12.png"
                ]
            }
        ]
        
    },
    {
        "endpoint":"/student/SubmittedHomeworkQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get only Submitted Questions with it's answers in a Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            }
        ],
        "responseDescription":"Receives a list of all the Submitted Questions in That Homework,With Their answer",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "attachments": null,
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9",
                        "Studentanswer": true
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6",
                        "Studentanswer": false
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1",
                        "Studentanswer": false
                    }
                ]
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "attachments": null,
                "Studentanswer": "it is a layer around the Earth "
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "attachments": null,
                "Studentattachment": ["test.png"]
            }
        ]
        
    },
    {
        "endpoint":"/student/homeworkSubmission",
        "method":"POST",
        "description":"The Endpoint Used to Submit Homework answers",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            },
            {
                "paramName":"submissionDate",
                "paramType":"Date",
                "paramDescription":"Take the Date of the Submission sent By a User"
            },
            {
                "paramName":"answers",
                "paramType":"Object",
                "paramDescription":"Take The List Of Answers as the Example"
            }
            
        ],
        "requestExample":{
            "studentID":1,
            "homeworkID":1,
            "answers":[
                {
                    "id": 1,
                    "answer": "",
                    "attachments": null,
                    "options": [
                        {
                            "id": 2,
                            "checked": true     
                        },
                        {
                            "id": 1,
                            "checked": false
                        }
                    ]
                },
                {
                    "id": 2,
                    "answer": "",
                    "attachments": ["1234.pdf","4566.pdf"],
                    "options": null
                },
                {
                    "id": 3,
                    "answer": "This is my Written answer",
                    "attachments": null,
                    "options": null
                }
            ]
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/student/homeworkSubmission",
        "method":"DELETE",
        "description":"The Endpoint Used to Unsubmit or Remove The Submission Data For Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            }
            
        ],
        "requestExample":{
            "homeworkID":1,
            "studentID":1
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/student/ExamsList",
        "method":"GET",
        "description":"The Endpoint Used in get All Exams List Assinged to Student's Class, the Exams Will Not Be In Detail Just the Name,Total Marks,Due Data, and The Name Of the Subject",
        "parameters":[

            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives The List of Exams Assinged To That Class With No Deep Details",
        "responseExample":[
            {
                "id": 2,
                "submitted": false,
                "grade": null,
                "exam": {
                    "id": 2,
                    "name": "First Sheet",
                    "description": "Solve From Q1 to Q10:",
                    "grade": 20,
                    "publish_date": "2023-02-19T18:42:49.000Z",
                    "due_date": "2023-02-19T18:42:50.000Z",
                    "subject": {
                        "id": 2,
                        "teacherID": null,
                        "name": "Physics",
                        "score": 200
                    }
                }
            }
        ]
    },
    {
        "endpoint":"/student/SubmittedExamsList",
        "method":"GET",
        "description":"The Endpoint Used in get All Exams That Student Already Submit, the Exams Will Not Be In Detail Just the Name,Total Marks,Due Data, and The Name Of the Subject",
        "parameters":[

            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives The List of Submitted Exams  To That Class With No Deep Details",
        "responseExample":[
            {
                "id": 2,
                "submitted": false,
                "grade": null,
                "exam": {
                    "id": 2,
                    "name": "First Sheet",
                    "description": "Solve From Q1 to Q10:",
                    "grade": 20,
                    "publish_date": "2023-02-19T18:42:49.000Z",
                    "due_date": "2023-02-19T18:42:50.000Z",
                    "subject": {
                        "id": 2,
                        "teacherID": null,
                        "name": "Physics",
                        "score": 200
                    }
                }
            }
        ]
    },
    {
        "endpoint":"/student/examGrades",
        "method":"GET",
        "description":"The Endpoint Used to get The Student Exams Grades",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives Student's Grade and The Total Grade",
        "responseExample":{
            "grade": 25,
            "totalGrade": 45
        }
        
    },
    {
        "endpoint":"/student/ExamsCount",
        "method":"GET",
        "description":"The Endpoint Used to get How Meny Exams are Assinged to Student's Class and are Not Submitted yet",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives a Number of Assigned Exams",
        "responseExample":{
            "count":2
        }
        
    },
    {
        "endpoint":"/student/totalExamsCount",
        "method":"GET",
        "description":"The Endpoint Used to get How Meny Exams are Assinged to Student's Class wheather Submitted or not",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives a Number of Assigned Exams",
        "responseExample":{
            "count":2
        }
        
    },
    {
        "endpoint":"/student/examHeader",
        "method":"GET",
        "description":"The Endpoint Used to Get All Details like Exam Title, grades,   About Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The exam"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives all the Data Related To That Exam",
        "responseExample":{
                "id": 1,
                "submitted": false,
                "grade": null,
                "submissionDate": null,
                "exam": {
                    "id": 1,
                    "name": "Sheet 1",
                    "description": "Solve The Following Questions:",
                    "grade": 10,
                    "publish_date": "2023-02-19T18:42:18.000Z",
                    "due_date": "2023-02-19T18:42:18.000Z"
                }
            }
        
        
        
    },
    {
        "endpoint":"/student/ExamQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get All Questions in a Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            }
        ],
        "responseDescription":"Receives a list of all the Questions in That Exam,<br/>the Received Parameter 'Type' Might Have Meny Value as Follows:<br/> <code classname='higlighted'>'smcq'</code> Means Single Choise MCQ Questions,<br/> <code classname='higlighted'>'mmcq'</code> Means Multiple Choise MCQ Question<br/> <code classname='higlighted'>'written'</code> Means Written Question,<br/> <code classname='higlighted'>'attach'</code> Mean Question Need Attachment ",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9"
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6"
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1"
                    }
                ],
                "attachments": []
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "options": [],
                "attachments": []
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "options": [],
                "attachments": [
                    "12.png"
                ]
            }
        ]
        
    },
    {
        "endpoint":"/student/SubmittedExamsQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get only Submitted Questions with it's answers in a Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            }
        ],
        "responseDescription":"Receives a list of all the Submitted Questions in That Exam,With Their answer",
        "responseExample":[
            {
                "id": 25,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "attachments": null,
                "options": [
                    {
                        "id": 56,
                        "isRight": true,
                        "text": "9",
                        "Studentanswer": true
                    },
                    {
                        "id": 57,
                        "isRight": false,
                        "text": "6",
                        "Studentanswer": false
                    },
                    {
                        "id": 58,
                        "isRight": false,
                        "text": "1",
                        "Studentanswer": false
                    }
                ]
            },
            {
                "id": 26,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "attachments": null
            },
            {
                "id": 27,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "attachments": null,
                "Studentattachment": []

            }
        ]
        
        
    },
    {
        "endpoint":"/student/examSubmission",
        "method":"POST",
        "description":"The Endpoint Used to Submit Exam answers",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            },
            {
                "paramName":"answers",
                "paramType":"Object",
                "paramDescription":"Take The List Of Answers as the Example"
            }
            
        ],
        "requestExample":{
            "studentID":1,
            "examID":1,
            "answers":[
                {
                    "id": 1,
                    "answer": "",
                    "attachments": null,
                    "options": [
                        {
                            "id": 2,
                            "checked": true     
                        },
                        {
                            "id": 1,
                            "checked": false
                        }
                    ]
                },
                {
                    "id": 2,
                    "answer": "",
                    "attachments": ["1234.pdf","4566.pdf"],
                    "options": null
                },
                {
                    "id": 3,
                    "answer": "This is my Written answer",
                    "attachments": null,
                    "options": null
                }
            ]
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/student/examSubmission",
        "method":"DELETE",
        "description":"The Endpoint Used to Unsubmit or Remove The Submission Data For Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            }
            
        ],
        "requestExample":{
            "examID":1,
            "studentID":1
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },

    {
        "endpoint":"/student/CoursesList",
        "method":"GET",
        "description":"The Endpoint Used to the List of Enrolled Courses",
        "parameters":[
            {
                "paramName":"classroomID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Student's Classroom"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives a List of All Course Enrolled",
        "responseExample":[
            {
                "id": 1,
                "name": "math",
                "arName": "",
                "targetLevel": "kg1",
                "score": 150,
                "teacher": {
                    "id": 1,
                    "name": "Mostafa mohamed Mostafa",
                    "arName": "",
                    "img_dir": "https://api.bluelightlms.com/profilepic/123454.png",
                    "age": 49,
                    "role": "normal"
                },
                "favorite": true

            },
            {
                "id": 2,
                "name": "Arabic",
                "arName": "",
                "targetLevel": "kg1",
                "score": 200,
                "teacher": {
                    "id": 2,
                    "name": "ahmed Mahmoud mohamed",
                    "arName": "",
                    "img_dir": "https://api.bluelightlms.com/profilepic/123454.png",
                    "age": 54,
                    "role": "normal"
                },
                "favorite": false

            }
        ]
    },
    {
        "endpoint":"/student/favoriteCourses",
        "method":"GET",
        "description":"The Endpoint Used to the List of Courses that Marked as Favorite",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives a List of All Favorite Course Enrolled",
        "responseExample":[
            {
                "id": 1,
                "name": "math",
                "arName": "",
                "targetLevel": "kg1",
                "score": 150,
                "teacher": {
                    "id": 1,
                    "name": "Mostafa mohamed Mostafa",
                    "arName": "",
                    "img_dir": "https://api.bluelightlms.com/profilepic/123454.png",
                    "age": 49,
                    "role": "normal"
                },
                "favorite": true

            },
            {
                "id": 2,
                "name": "Arabic",
                "arName": "",
                "targetLevel": "kg1",
                "score": 200,
                "teacher": {
                    "id": 2,
                    "name": "ahmed Mahmoud mohamed",
                    "arName": "",
                    "img_dir": "https://api.bluelightlms.com/profilepic/123454.png",
                    "age": 54,
                    "role": "normal"
                },
                "favorite": true

            }
        ]
    },
    {
        "endpoint":"/student/favoriteCourse",
        "method":"POST",
        "description":"The Endpoint Used to Add a Course to Favorite",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"courseID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Course"
            }
            
        ],
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/student/favoriteCourse",
        "method":"DELETE",
        "description":"The Endpoint Used to remove a Course from Favorite",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"courseID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Course"
            }
            
        ],
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/student/courseAssingments",
        "method":"GET",
        "description":"The Endpoint Used to Get Assingments or Homeworks Related to a Selected Course",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }, 
            {
                "paramName":"classroomID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Student's Classroom"
            }, 
            {
                "paramName":"courseName",
                "paramType":"string",
                "paramDescription":"Take The Name of The Course (math, arabic, ...)"
            } 
            
        ],
        "responseDescription":"Receives a List of All Course Assingments",
        "responseExample":[
            {
                "id": 121,
                "submitted": false,
                "grade": null,
                "graded": false,
                "submissionDate": null,
                "homework": {
                    "id": 8,
                    "name": "sheet2",
                    "description": "Solve The Following Questions:",
                    "grade": 10,
                    "publish_date": "2020-12-12T20:10:10.000Z",
                    "due_date": "2023-07-20T23:27:43.000Z"
                }
            },
            {
                "id": 481,
                "submitted": false,
                "grade": null,
                "graded": false,
                "homework": {
                    "id": 17,
                    "name": "sheet 2",
                    "description": "Solve The Following Questions:",
                    "grade": 10,
                    "publish_date": "2020-12-12T20:10:10.000Z",
                    "due_date": "2023-07-12T15:41:59.000Z"
                }
            }
        ]
    },
    {
        "endpoint":"/student/courseExams",
        "method":"GET",
        "description":"The Endpoint Used to Get Exams Related to a Selected Course",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }, 
            {
                "paramName":"classroomID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Student's Classroom"
            }, 
            {
                "paramName":"courseName",
                "paramType":"string",
                "paramDescription":"Take The Name of The Course (math, arabic, ...)"
            } 
            
        ],
        "responseDescription":"Receives a List of All Course Exams",
        "responseExample":[
            {
                "id": 121,
                "submitted": false,
                "grade": null,
                "graded": false,
                "submissionDate":null,
                "exam": {
                    "id": 8,
                    "name": "sheet2",
                    "description": "Solve The Following Questions:",
                    "grade": 10,
                    "publish_date": "2020-12-12T20:10:10.000Z",
                    "due_date": "2023-07-20T23:27:43.000Z"
                }
            },
            {
                "id": 481,
                "submitted": false,
                "grade": null,
                "graded": false,
                "exam": {
                    "id": 17,
                    "name": "sheet 2",
                    "description": "Solve The Following Questions:",
                    "grade": 10,
                    "publish_date": "2020-12-12T20:10:10.000Z",
                    "due_date": "2023-07-12T15:41:59.000Z"
                }
            }
        ]
    },
    {
        "endpoint":"/student/CourseAnnouncement",
        "method":"GET",
        "description":"The Endpoint Used to Get All Announcements Posted in That Course",
        "parameters":[
            {
                "paramName":"classroomID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Student's Classroom"
            }, 
            {
                "paramName":"courseName",
                "paramType":"string",
                "paramDescription":"Take The Name of The Course (math, arabic, ...)"
            }
            
        ],
        "responseDescription":"Receives a List of All Course Announcements",
        "responseExample":[
            {
                "id": 1,
                "publishDate": "2023-03-01T15:51:38.000Z",
                "title": "Hello Every One",
                "bodyText": "We Are Happy To Have You All",
                "attachment": "."
            }
        ]
    },
    {
        "endpoint":"/student/messages",
        "method":"Get",
        "description":"The Endpoint Used to get a all messages Sent to the Student",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives All Private Messages",
        "responseExample":[
            {
                "id": 1,
                "title": "Update of Your Progress",
                "bodyText": "Your Have Been Doing Greate the Last Semester, which makes us all happy about what your are doing",
                "sendDate": "2023-08-13T01:52:47.000Z",
                "seen": true,
                "teacher": {
                    "id": 1,
                    "name": "Mostafa mohamed Mostafa",
                    "arName": "",
                    "img_dir": "default.png",
                    "age": 49,
                    "gender": "",
                    "role": "normal"
                },
                "private": true,
                "attachments": [
                    {
                        "attachment": "01023.png"
                    },
                    {
                        "attachment": "5667.png"
                    }
                ]
            },
            {
                "id": 1,
                "title": "testTitle",
                "description": "TestDesc",
                "sendDate": "2020-12-12T06:08:08.000Z",
                "teacher": {
                    "id": 1,
                    "name": "Mostafa mohamed Mostafa",
                    "arName": "",
                    "img_dir": "default.png",
                    "age": 49,
                    "gender": "",
                    "role": "normal"
                },
                "seen": false,
                "private": false,
                "attachments": []
            }
        ]
    },
    {
        "endpoint":"/student/messagesCount",
        "method":"GET",
        "description":"The Endpoint Used to Get All The unseen Messages Count",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives a Number unseen Messages",
        "responseExample":{"count":2}
    },
    {
        "endpoint":"/student/seeMessage",
        "method":"POST",
        "description":"The Endpoint Used to Mark a Message as Seen",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"messageID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Message"
            },
            {
                "paramName":"private",
                "paramType":"boolean",
                "paramDescription":"Take Weather the Message is Private or Public"
            }

            
        ],
        "requestExample":{
            "studentID":1,
            "messageID":1,
            "private":false
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors"
    },
    {
        "endpoint":"/student/AttendanceList",
        "method":"Get",
        "description":"The Endpoint Used to Show Student Attendance Records",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives a list showing Student's Absense Times In Each Course ",
        "responseExample":[
            {
                "id": 4,
                "absent": true,
                "date": "2023-05-01T21:13:08.000Z",
                "course": {
                    "id": 2,
                    "teacherID": null,
                    "name": "Physics",
                    "score": 200
                }
            }
        ]
    },
    {
        "endpoint":"/student/AttendanceCount",
        "method":"Get",
        "description":"The Endpoint Used to Show Student Attendance Times as a number, for Ex. he attended 2 classes",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives a Number showing Student's Attendace Times In Total Classes ",
        "responseExample":{"count":3}
    },
    {
        "endpoint":"/student/totalAttendance",
        "method":"Get",
        "description":"The Endpoint Used to Show Student Attendance and absence Times in total",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
            
        ],
        "responseDescription":"Receives a Number showing Student's Attendace and absence Times In Total  ",
        "responseExample":{"count":3}
    },
    {
        "endpoint":"/student/timetable",
        "method":"Get",
        "description":"The Endpoint Used to Student's Time Table ",
        "parameters":[
            {
                "paramName":"classroomID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Classroom"
            }
            
        ],
        "responseDescription":"Receives a list showing Student's Time Table",
        "responseExample":[
            {
                "id": 1,
                "day": "Tuesday",
                "hour": "9:30",
                "course": {
                    "id": 1,
                    "name": "Math",
                    "score": 100
                }
            },
            {
                "id": 2,
                "day": "Tuesday",
                "hour": "11:00",
                "course": {
                    "id": 2,
                    "name": "Physics",
                    "score": 200
                }
            }
        ]
    },




















    {
        "endpoint":"/teacher/classrooms",
        "method":"Get",
        "description":"The Endpoint Used to Get The List Classrooms which  The Teacher is Teaching",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Teacher"
            }
            
        ],
        "responseDescription":"Receives a list of Classrooms arranged By The Subjects That the Teacher is Responsible For",
        "responseExample":{
            "math": [
                {
                    "id": "kg1/1",
                    "name": "1/1"
                },
                {
                    "id": "E1/2",
                    "name": "1/2"
                }
            ],
            "Arabic": [
                {
                    "id": "kg1/1",
                    "name": "1/1"
                }
            ]
        }
    },
    {
        "endpoint":"/teacher/studentsList",
        "method":"Get",
        "description":"The Endpoint Used to Get The List of Student in Specific Class",
        "parameters":[
            {
                "paramName":"classroomID",
                "paramType":"String",
                "paramDescription":"Take The ID of The Classroom"
            }
            
        ],
        "responseDescription":"Receives a list of Student in a Classroom",
        "responseExample":[
            {
                "id": 8,
                "name": "Omar",
                "img_dir": "http",
                "age": 14
            },
            {
                "id": 9,
                "name": "AHmed",
                "img_dir": "http",
                "age": 15
            }
        ]
    },
    {
        "endpoint":"/Teacher/Homework",
        "method":"post",
        "description":"The Endpoint Used to Create New Homework and Assign it To Selected Classroom",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"The ID of the Teacher Who Created the Homework"
            },
            {
                "paramName":"classroomsID",
                "paramType":"List",
                "paramDescription":"which Classes Does The Assignment or Homework is Asssigned To"
            },
            {
                "paramName":"courseID",
                "paramType":"Number",
                "paramDescription":"The Course ID of the Assingment Subject"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Assignment Name (Title)"
            },
            {
                "paramName":"description",
                "paramType":"String",
                "paramDescription":"The description Of the Assignment (Default Null )"
            },
            {
                "paramName":"grade",
                "paramType":"Number",
                "paramDescription":"The Grades for This Assignment"
            },
            {
                "paramName":"publish_date",
                "paramType":"Date",
                "paramDescription":"Tells When The Assingment Was Published"
            },
            {
                "paramName":"due",
                "paramType":"array",
                "paramDescription":"Tells When The Deadline for the Assingment Submission"
            },
            {
                "paramName":"Questions",
                "paramType":"Object",
                "paramDescription":"The list of Questions Including the Options For Each Question"
            }
            
        ],
        "requestExample":{
            "classroomsID": ["E3/1","E3/2"],
            "courseID": 1,
            "teacherID":1,
            "name": "sheet1",
            "description": "Solve The Following Questions:",
            "grade": 10,
            "publish_date": "2020-12-12 20:10:10",
            "due": "2020-12-22 20:10:10",
            "Questions": [
               {
                  "type": "smcq",
                  "QNumber": 1,
                  "questionText": "What is 3*3",
                  "attachments": null,
                  "grade": 5,
                  "options": [
                     {
                        "text": "9",
                        "isRight": true
                     },
                     {
                        "text": "6",
                        "isRight": false
                     },
                     {
                        "text": "1",
                        "isRight": false
                     }
                  ]
               },
               {
                  "type": "written",
                  "QNumber": 2,
                  "questionText": "Write What You Know About Atmosphere",
                  "attachments": null,
                  "grade": 10,
                  "options": null
               },
               {
                  "type": "attachment",
                  "QNumber": 3,
                  "questionText": "Look at these Two PDFs and Solve the Questions inside it",
                  "attachments": ["1234.pdf","4566.pdf"],
                  "grade": 10,
                  "options": null
               }
            ]
         },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/Homework",
        "method":"delete",
        "description":"The Endpoint Used to Unsubmit or Remove The  Data For Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"String",
                "paramDescription":"Take The ID of The Homework"
            }
            
        ],
        "requestExample":{
            "homeworkID":9
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/NotgradedHomeworkCount",
        "method":"Get",
        "description":"The Endpoint Used to get The Count of The Submissions That Needs To Be Graded",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Teacher"
            }
            
        ],
        "requestExample":{
            "teacherID":1
        },
        "responseDescription":"Receives a Number of The Not Graded Submissions, or one of The Common Errors",
        "responseExample":10
    },
    {
        "endpoint":"/Teacher/HomeworkList",
        "method":"Get",
        "description":"The Endpoint Used to get List of all Homeworks That The Teacher Posted With how many Submission Need to Be Graded in Each",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Teacher"
            }
            
        ],
        "requestExample":{
            "teacherID":1
        },
        "responseDescription":"Receives a List of Homeworks That The Teacher Posted With how many Submission Need to Be Graded in Each",
        "responseExample":[
            {
                "id": 1,
                "name": "sheet2",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null,
                "course": {
                    "id": 2,
                    "name": "Arabic",
                    "arName": "",
                    "targetLevel": "kg1",
                    "score": 200
                },
                "NotGraded": 0,
                "totalSubmission": 0,
                "NotSubmitted": 40
            },
            {
                "id": 2,
                "name": "sheet2",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null,
                "course": {
                    "id": 2,
                    "name": "Arabic",
                    "arName": "",
                    "targetLevel": "kg1",
                    "score": 200
                },
                "NotGraded": 1,
                "totalSubmission": 1,
                "NotSubmitted": 79
            }
        ]
    },
    {
        "endpoint":"/Teacher/HomeworkSubmissionList",
        "method":"Get",
        "description":"The Endpoint Used to get List of all Submission in a Spicific Homework",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Homework"
            }
            
        ],
        "requestExample":{
            "homeworkID":1
        },
        "responseDescription":"Receives a List of Homework Submission (list of Students) That The Teacher Need to Be Grade",
        "responseExample":[
            {
                "id": 24,
                "submitted": true,
                "grade": null,
                "graded": false,
                "student": {
                    "id": 8,
                    "name": "Omar",
                    "img_dir": "http",
                    "age": 14
                }
            }
        ]
    },
    {
        "endpoint":"/Teacher/gradeHomework",
        "method":"POST",
        "description":"The Endpoint Used to get List of all Submission in a Spicific Homework",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Homework"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"questions",
                "paramType":"Object",
                "paramDescription":"Take an Object of Each Question ID and Its Grade"
            }
            
        ],
        "requestExample":{
            "studentID": 8,
            "homeworkID": 29,
            "questions":[
                {
                    "questionID":54,
                    "grade":5
                },
                {
                    "questionID":54,
                    "grade":5
                },
                {
                    "questionID":54,
                    "grade":5
                }
                
            ]
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },

    {
        "endpoint":"/teacher/homeworkHeader",
        "method":"GET",
        "description":"The Endpoint Used to Get All Details like Homework Title, grades,   About Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            },
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives all the Data Related To That Homework",
        "responseExample":{
            "id": 54,
            "submitted": true,
            "grade": 15,
            "graded": true,
            "homework": {
                "id": 29,
                "name": "sheet1",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null
            }
        }   
        
    },
    {
        "endpoint":"/teacher/SubmittedHomeworkQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get only Submitted Questions with it's answers in a Specific Homework using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"homeworkID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Homework"
            }
        ],
        "responseDescription":"Receives a list of all the Submitted Questions in That Homework,With Their answer",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "attachments": null,
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9",
                        "Studentanswer": true
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6",
                        "Studentanswer": false
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1",
                        "Studentanswer": false
                    }
                ]
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "attachments": null,
                "Studentanswer": "it is a layer around the Earth "
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "attachments": null,
                "Studentattachment": ["test.png"]
            }
        ]
    },



    {
        "endpoint":"/Teacher/Exam",
        "method":"post",
        "description":"The Endpoint Used to Create New Exam and Assign it To Selected Classroom",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"The ID of the Teacher Who Created the Exam"
            },
            {
                "paramName":"classroomID",
                "paramType":"String",
                "paramDescription":"which Class Does The Assignment is Asssigned To"
            },
            {
                "paramName":"courseID",
                "paramType":"Number",
                "paramDescription":"The Course ID of the Assingment Subject"
            },
            {
                "paramName":"name",
                "paramType":"String",
                "paramDescription":"Assignment Name (Title)"
            },
            {
                "paramName":"description",
                "paramType":"String",
                "paramDescription":"The description Of the Assignment (Default Null )"
            },
            {
                "paramName":"grade",
                "paramType":"Number",
                "paramDescription":"The Grades for This Assignment"
            },
            {
                "paramName":"publish_date",
                "paramType":"Date",
                "paramDescription":"Tells When The Assingment Was Published"
            },
            {
                "paramName":"due",
                "paramType":"array",
                "paramDescription":"Tells When The Deadline for the Assingment Submission"
            },
            {
                "paramName":"Questions",
                "paramType":"Object",
                "paramDescription":"The list of Questions Including the Options For Each Question"
            }
            
        ],
        "requestExample":{
            "classroomID": "E3/2",
            "courseID": 1,
            "teacherID":1,
            "name": "sheet1",
            "description": "Solve The Following Questions:",
            "grade": 10,
            "publish_date": "2020-12-12 20:10:10",
            "due": "2020-12-22 20:10:10",
            "Questions": [
               {
                  "type": "smcq",
                  "QNumber": 1,
                  "questionText": "What is 3*3",
                  "attachments": null,
                  "grade": 5,
                  "options": [
                     {
                        "text": "9",
                        "isRight": true
                     },
                     {
                        "text": "6",
                        "isRight": false
                     },
                     {
                        "text": "1",
                        "isRight": false
                     }
                  ]
               },
               {
                  "type": "written",
                  "QNumber": 2,
                  "questionText": "Write What You Know About Atmosphere",
                  "attachments": null,
                  "grade": 10,
                  "options": []
               },
               {
                  "type": "attachment",
                  "QNumber": 3,
                  "questionText": "Look at these Two PDFs and Solve the Questions inside it",
                  "attachments": ["1234.pdf","4566.pdf"],
                  "grade": 10,
                  "options": []
               }
            ]
         },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/Exam",
        "method":"delete",
        "description":"The Endpoint Used to Unsubmit or Remove The  Data For Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"String",
                "paramDescription":"Take The ID of The Exam"
            }
            
        ],
        "requestExample":{
            "examID":9
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },

    {
        "endpoint":"/Teacher/NotgradedExamCount",
        "method":"Get",
        "description":"The Endpoint Used to get The Count of The Submissions That Needs To Be Graded",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Teacher"
            }
            
        ],
        "requestExample":{
            "teacherID":1
        },
        "responseDescription":"Receives a Number of The Not Graded Submissions, or one of The Common Errors",
        "responseExample":10
    },
    {
        "endpoint":"/Teacher/examList",
        "method":"Get",
        "description":"The Endpoint Used to get List of all Exams That The Teacher Posted With how many Submission Need to Be Graded in Each",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Teacher"
            }
            
        ],
        "requestExample":{
            "teacherID":1
        },
        "responseDescription":"Receives a List of Exams That The Teacher Posted With how many Submission Need to Be Graded in Each",
        "responseExample":[
            {
                "id": 19,
                "name": "Quiz 1",
                "description": "solve it student asap",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null,
                "course": {
                    "id": 1,
                    "name": "math",
                    "arName": "",
                    "targetLevel": "kg1",
                    "score": 150
                },
                "NotGraded": 0,
                "totalSubmission": 0,
                "NotSubmitted": 80

            },
            {
                "id": 21,
                "name": "Quiz 2",
                "description": "solve it student asap",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null,
                "course": {
                    "id": 1,
                    "name": "math",
                    "arName": "",
                    "targetLevel": "kg1",
                    "score": 150
                },
                "NotGraded": 0,
                "totalSubmission": 0,
                "NotSubmitted": 80            },
            {
                "id": 29,
                "name": "Quiz 3",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null,
                "course": {
                    "id": 1,
                    "name": "math",
                    "arName": "",
                    "targetLevel": "kg1",
                    "score": 150
                },
                "NotGraded": 0,
                "totalSubmission": 0,
                "NotSubmitted": 80            }
        ]
    },
    {
        "endpoint":"/Teacher/ExamSubmissionList",
        "method":"Get",
        "description":"The Endpoint Used to get List of all Submission in a Spicific Exam",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Exam"
            }
            
        ],
        "requestExample":{
            "examID":1
        },
        "responseDescription":"Receives a List of Exam Submission (list of Students) That The Teacher Need to Be Grade",
        "responseExample":[
            {
                "id": 24,
                "submitted": true,
                "grade": null,
                "graded": false,
                "student": {
                    "id": 8,
                    "name": "Omar",
                    "img_dir": "http",
                    "age": 14
                }
            }
        ]
    },
    {
        "endpoint":"/Teacher/gradeExam",
        "method":"POST",
        "description":"The Endpoint Used to get List of all Submission in a Spicific Exam",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Exam"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"questions",
                "paramType":"Object",
                "paramDescription":"Take an Object of Each Question ID and Its Grade"
            }
            
        ],
        "requestExample":{
            "studentID": 8,
            "examID": 29,
            "questions":[
                {
                    "questionID":54,
                    "grade":5
                },
                {
                    "questionID":54,
                    "grade":5
                },
                {
                    "questionID":54,
                    "grade":5
                }
                
            ]
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },


    {
        "endpoint":"/teacher/examHeader",
        "method":"GET",
        "description":"The Endpoint Used to Get All Details like Exam Title, grades,   About Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student"
            }
        ],
        "responseDescription":"Receives all the Data Related To That Exam",
        "responseExample":{
            "id": 54,
            "submitted": true,
            "grade": 15,
            "graded": true,
            "submissionDate": "2023-08-09T15:30:08.000Z",
            "exam": {
                "id": 29,
                "name": "Quiz 1",
                "description": "Solve The Following Questions:",
                "grade": 10,
                "publish_date": "2020-12-12T18:10:10.000Z",
                "due_date": null
            }
        }   
        
    },
    {
        "endpoint":"/teacher/SubmittedExamQuestions",
        "method":"GET",
        "description":"The Endpoint Used to Get only Submitted Questions with it's answers in a Specific Exam using it's ID",
        "parameters":[
            {
                "paramName":"studentID",
                "paramType":"number",
                "paramDescription":"Take The ID of The Student"
            },
            {
                "paramName":"examID",
                "paramType":"string",
                "paramDescription":"Take The ID of The Exam"
            }
        ],
        "responseDescription":"Receives a list of all the Submitted Questions in That Exam, With Their answer",
        "responseExample":[
            {
                "id": 4,
                "type": "smcq",
                "QNumber": 1,
                "grade": 5,
                "questionText": "What is 3*3",
                "attachments": null,
                "options": [
                    {
                        "id": 4,
                        "isRight": true,
                        "text": "9",
                        "Studentanswer": true
                    },
                    {
                        "id": 5,
                        "isRight": false,
                        "text": "6",
                        "Studentanswer": false
                    },
                    {
                        "id": 6,
                        "isRight": false,
                        "text": "1",
                        "Studentanswer": false
                    }
                ]
            },
            {
                "id": 5,
                "type": "written",
                "QNumber": 2,
                "grade": 10,
                "questionText": "Write What You Know About Atmosphere",
                "attachments": [],
                "Studentanswer": "it is a layer around the Earth "
            },
            {
                "id": 6,
                "type": "attachment",
                "QNumber": 3,
                "grade": 10,
                "questionText": "upload You id Image",
                "attachments": [
                    {
                        "id": 1,
                        "attachmentDir": "12.png"
                    }
                ],
                "Studentattachment": ["test.png"]
            }
        ]
    },




    
    {
        "endpoint":"/Teacher/event",
        "method":"POST",
        "description":"The Endpoint Used to Add New Event By a Teacher",
        "parameters":[
            {
                "paramName":"title",
                "paramType":"string",
                "paramDescription":"The Event Title like (Zoo Trip)"
            },
            {
                "paramName":"description",
                "paramType":"String",
                "paramDescription":"The description of the Event, like (When, Where ...)"
            },
            {
                "paramName":"publish_date",
                "paramType":"Date",
                "paramDescription":"The Date When The Event Was Published"
            },
            {
                "paramName":"attachment",
                "paramType":"String",
                "paramDescription":"Take The Attachment URL if Exist"
            },
            {
                "paramName":"teacherID",
                "paramType":"number",
                "paramDescription":"The ID of the Teacher Who Published The Event"
            },
            {
                "paramName":"targetClassrooms",
                "paramType":"Array",
                "paramDescription":"The List of Classroom Targeted in This Event"
            }
        ],
        "requestExample":{
            "title":"testTitle",
            "description":"TestDesc",
            "publish_date":"2020-12-12 08:08:08",
            "attachments":null,
            "teacherID":1,
            "targetClassrooms":["E3/2","E3/1"]
        
        },
        "responseDescription":"Receives 'Done'",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/event",
        "method":"delete",
        "description":"The Endpoint Used to Delete an Event By a Teacher",
        "parameters":[
            {
                "paramName":"eventID",
                "paramType":"number",
                "paramDescription":"Take The ID of The event"
            }
        ],
        "requestExample":{
            "eventID":3    
        },
        "responseDescription":"Receives 'Done'",
        "responseExample":"Done"
    },




    {
        "endpoint":"/Teacher/attendance",
        "method":"post",
        "description":"The Endpoint Used to take the Attendance of specific Classrooms",
        "parameters":[
            {
                "paramName":"courseID",
                "paramType":"String",
                "paramDescription":"Take The ID of The Course"
            },
            {
                "paramName":"date",
                "paramType":"Date",
                "paramDescription":"Take The Current Day"
            },
            {
                "paramName":"names",
                "paramType":"array",
                "paramDescription":"The list of Student's Names and weather thay Attend or Not"
            }
            
        ],
        "requestExample":{
            "courseID":"1",
            "date":"2020-12-12",
            "names":
            [
                {
                    "studentID":4,
                    "courseID":"1",
                    "absent":true
                },
                {
                    "studentID":3,
                    "courseID":"1",
                    "absent":false
                }
            ]   
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/attendance",
        "method":"DELETE",
        "description":"The Endpoint Used to Delete or Unsumbit Attendance Record",
        "parameters":[
            {
                "paramName":"courseID",
                "paramType":"String",
                "paramDescription":"Take The ID of The Course"
            },
            {
                "paramName":"date",
                "paramType":"Date",
                "paramDescription":"Take The Current Day"
            }
            
        ],
        "requestExample":{
            "courseID":"1",
            "date":"2020-12-12 00:01:00"
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/DirectMessage",
        "method":"POST",
        "description":"The Endpoint Used to Send a Direct Message or Note to The Student's Parent",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Course"
            },
            {
                "paramName":"studentID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Student To Target His/Her Parents"
            },
            {
                "paramName":"sendTo",
                "paramType":"String",
                "paramDescription":"The Target of the Message, it take one of the Values (student,parent) to determine weather it is will be Sent to Student or Parent"
            },
            {
                "paramName":"relation",
                "paramType":"String",
                "paramDescription":"this is set only in the case of sendTo Parent, and it is the Relation Between the Student and the Targeted parent , weather 'father' or 'mother' "
            },
            {
                "paramName":"title",
                "paramType":"String",
                "paramDescription":"Take The Title of The Message"
            },
            {
                "paramName":"bodyText",
                "paramType":"String",
                "paramDescription":"Take The Main Text of the Message"
            }
            
        ],
        "requestExample":{
            "teacherID":1,
            "studentID":23,
            "sendTo":"parent",
            "relation":"father",
            "title":"Update of Omar Progress",
            "bodyText":"Omar has Been Doing Great in the last Few Week and i wanted to Thank You For That"
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/DirectMessage",
        "method":"DELETE",
        "description":"The Endpoint Used to Delete a Message",
        "parameters":[
            {
                "paramName":"messageID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Message"
            }
        ],
        "requestExample":{
            "messageID":1
        },
        "responseDescription":"Receives 'Done' if Every Thing Went Well, or one of The Common Errors",
        "responseExample":"Done"
    },
    {
        "endpoint":"/Teacher/DirectMessageList",
        "method":"Get",
        "description":"The Endpoint Used to Get all The Messgaes that a Teacher Send",
        "parameters":[
            {
                "paramName":"teacherID",
                "paramType":"Number",
                "paramDescription":"Take The ID of The Course"
            }
            
        ],
        "requestExample":{
            "teacherID":1
        },
        "responseDescription":"Receives a List of all Sent Messages, or one of The Common Errors",
        "responseExample":[
            {
                "id": 3,
                "title": "Welcome",
                "bodyText": "Welcome Here  Sir, Your SOn is KInda Playable",
                "sendDate": "2023-06-09T22:38:23.000Z",
                "seen": true
            },
            {
                "id": 4,
                "title": "Update of Omar Progress",
                "bodyText": "Omar has Been Doing Great in the last Few Week and i wanted to Thank You For That",
                "sendDate": "2023-06-09T22:38:23.000Z",
                "seen": false
            }
        ]
    }
]
